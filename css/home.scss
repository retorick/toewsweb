/* For home page*/

@import "variables";
@import "code_exhibits";

/*
    This section is for making the tabbed areas on the home page.
    The actual tab shape above each rectangular box is a PNG image placed using the :before pseudo-element.
*/
$color-home-border-a: #ffd76e;
$color-home-border-b: #909855;
$color-home-border-c: #9999cc;
$color-home-border-d: #656e85;
$color-home-border-e: #ff9900;
$color-home-border-f: #3db4b4;

$tab-width:200px;
$tab-height:30px;
$tab-box-width:$right-content-width - 2;
$tab-box-padding:10px;
$tab-box-content-width:$tab-box-width - 2*$tab-box-padding;

/*
    Tabbed box mixin:  Accepts two parameters:
    $color: for borders and backgrounds
    $ltr: indicates PNG tab image that matches the color
*/
@mixin tabbed-box($color, $ltr) {
    position:relative;
    width:$tab-box-width;
    border:1px solid #{$color};
    background: #{$color};
    margin-top:75px;
    border-radius:5px;
    min-height:150px;
    &:before {
        content: "";
        position:absolute;
        top:-1 * $tab-height - 1;
        left:10px;
        width:$right-content-width - 70;
        height:$tab-height;
        display:block;
        padding:10px 22px;
        font:16px verdana, sans-serif;
        color:white;
        text-shadow:1px 1px 0 #333;
        background:url(#{$images}/tab_#{$ltr}.png) no-repeat top right;
        background-size:$tab-width $tab-height;
    }
}

.tab-label {
    position:absolute;
    width:$tab-width;
    top:-1*$tab-height + 10;
    font:16px verdana, sans-serif;
    color:darken(#fff,10%);
    text-shadow:1px 1px 0 #000;
}
.tab-content {
    padding:$tab-box-padding;
    color:darken(#909855,20);
}

/*
    Enough with the general stuff for making the tabbed boxes; here are the instances.
    Recent Blogs, Code Samples, and Portfolio Highlights.
    This illustrates something really cool about SCSS mixins:
    There are several tab box colors to choose from, and it would be really nice to
    be able to select a different color without having to worry about each property
    and the background image.  Well, since mixins take arguments, all I have to do
    is set the arguments in the @include for the specific tabbed box I want to make.
    The mixin tabbed-box takes two arguments:  a color, and a tab image suffix, which
    is a single letter.  The colors are stored in variables ending with the letter that 
    matches the image, so I just change the letter on the end of the color variable and
    the letter in the second argument, and I'm done.
*/
#recent-blogs-box {
    @include tabbed-box($color-home-border-b, b);
    margin-top:0;
    .tab-label {
        text-align:right;
        padding-right:60px;
        right:0;
    }
    .tab-content {
        color:darken(white, 10%);
        strong {
            color:white;
        }
    }
}

$code-term-width:150px;
$desc-width:$tab-box-content-width - $code-term-width;
$desc-bg-color:transparent;
#code-samples-box {
    @include tabbed-box($color-home-border-d, d);
    &:before {
        background-position: top center;
    }
    .tab-label {
        text-align:center;
        margin:0 auto;
        position:relative;
    }
    .tab-content {
        color:darken(white, 10%);
    }
    #exhibits {
        @include code_samples($code-term-width, $desc-width, $desc-bg-color);
    }
}

#portfolio-highlights-box {
    @include tabbed-box($color-home-border-d, d);
    margin-top:0;
    &:before {
        background-position: top left;
    }
    .tab-label {
        padding-left:32px;
    }
    .tab-content {
        color:darken(white, 10%);
    }
    .portfolio-item {
            margin-top:10px;
        float:left;
        width:160px;
        text-align:center;
        img {
            box-shadow:2px 2px 3px black;
            width:100px;
        }
        p:first-child {
            height:90px;
        }
    }
}
